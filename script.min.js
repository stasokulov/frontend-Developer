"use strict";var username="stasokulov",linkToMyGit="https://api.github.com/users/".concat(username),numRepos="",reposPerPage=10,pageForLoad=1;function getRepos(e){var t=document.querySelector(".preloader__wrap_git");t.classList.remove("hidden");var a="".concat(linkToMyGit,"/repos?per_page=").concat(reposPerPage,"&page=").concat(e);fetch(a).then(function(e){if(200===e.status)return e.json();alert("Запрос на github.com не удался. Ошибка: "+e.status)}).then(function(e){e.forEach(function(e){gitItemCreator(e)})}).then(function(){t.classList.add("hidden")})}function gitItemCreator(e){var t=document.querySelector(".git__list"),a=createElement("li");a.classList.add("git__main__item");var r=createElement("a");r.classList.add("git__item-innerWrap"),r.classList.add("link"),r.href=e.html_url,r.target="blank";var n=createElement("p");n.classList.add("git__item-title"),n.innerHTML=e.name;var i=createElement("p");i.classList.add("git__item-text");var o=createElement("span");switch(o.classList.add("marker"),e.language){case"HTML":o.classList.add("marker_HTML");break;case"CSS":o.classList.add("marker_CSS");break;case"JS":o.classList.add("marker_JS")}var c=createElement("span");c.classList.add("text-element"),c.classList.add("text-element_progLang"),c.innerHTML=e.language;var s=createElement("span");s.classList.add("text-element");var d=createElement("span");d.classList.add("text-element_star");var l=createElement("span");l.classList.add("text-element");var u=createElement("span");u.classList.add("text-element_fork");var m=createElement("span");m.classList.add("text-element"),m.classList.add("text-element_update"),m.innerHTML="Обновлено "+new Date(e.updated_at).toLocaleDateString("ru")+"г.",s.appendChild(d),l.appendChild(u),i.appendChild(o),i.appendChild(c),i.appendChild(s),i.appendChild(l),i.appendChild(m),r.appendChild(n),r.appendChild(i),a.appendChild(r),e.stargazers_count?s.appendChild(document.createTextNode(e.stargazers_count)):s.remove(),e.forks_count?u.appendChild(document.createTextNode(e.forks_count)):u.remove(),t.appendChild(a)}function createPagination(e){var t=document.querySelector(".paginator"),a=document.querySelector(".paginator__item").cloneNode(!0);a.classList.remove("hidden"),1===e&&a.classList.add("paginator__item_active"),a.appendChild(document.createTextNode(e)),t.appendChild(a)}function goPagination(){document.querySelector(".paginator").addEventListener("click",function(e){if("paginator__item"===e.target.className){var t=document.querySelectorAll(".git__main__item");(t=Array.from(t)).forEach(function(e){e.remove()}),getRepos(e.target.innerText);var a=document.querySelectorAll(".paginator__item");(a=Array.from(a)).forEach(function(e){e.classList.remove("paginator__item_active")}),e.target.classList.add("paginator__item_active")}})}function createElement(e){return document.createElement(e)}getRepos(pageForLoad),goPagination(),fetch(linkToMyGit).then(function(e){if(200===e.status)return e.json();alert("Запрос на github.com не удался. Ошибка: "+e.status)}).then(function(e){return numRepos=e.public_repos}).then(function(e){for(var t=Math.ceil(e/reposPerPage),a=1;a<=t;a++)createPagination(a)});var burger=document.querySelector(".burger"),burgerItem1=document.querySelector(".burger__item-1"),burgerItem2=document.querySelector(".burger__item-2"),mobileMenu=document.querySelector(".header__mobileMenu"),main=document.querySelector("main"),footer=document.querySelector(".footer__wrap");burger.addEventListener("click",function(){burgerItem1.classList.toggle("burger__item-1_active"),burgerItem2.classList.toggle("burger__item-2_active"),mobileMenu.classList.toggle("hidden"),main.classList.toggle("hidden"),footer.classList.toggle("hidden")});var body=document.querySelector("body");body.addEventListener("click",function(e){if(e.target.classList.contains("scroll")){burgerItem1.classList.remove("burger__item-1_active"),burgerItem2.classList.remove("burger__item-2_active"),mobileMenu.classList.add("hidden"),main.classList.remove("hidden"),footer.classList.remove("hidden");var t=e.target.dataset.target,a=document.querySelector("."+t).offsetTop,r=window.pageYOffset,n=50,i=(a-r)/n,o=r,c=0;!function e(){o+=i,setTimeout(function(){window.scrollTo(0,o),++c<n&&e()},10)}()}}),document.querySelector("body").addEventListener("click",function(e){if(e.target.classList.contains("telNum")){var t=e.target.innerText,a=document.createElement("input");a.value=t,document.body.appendChild(a),a.select(),document.execCommand("copy"),document.body.removeChild(a)}}),window.onload=function(){document.querySelector(".preloader__wrap_global").classList.add("hidden")};var viewAll=document.querySelectorAll(".recentWorks__title-side"),hiddenWorks=document.querySelector(".recentWorks__example").querySelectorAll(".hidden");(viewAll=Array.from(viewAll)).forEach(function(e){e.addEventListener("click",function(){hiddenWorks.forEach(function(e){e.classList.toggle("hidden")}),viewAll.forEach(function(e){e.classList.toggle("hidden")})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
